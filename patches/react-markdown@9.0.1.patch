diff --git a/lib/index.d.ts b/lib/index.d.ts
index ff9ced4eab71c8785ba18302777fa71cdf735098..624f08c8246884c0fbc2aa51b73adad17c64fa78 100644
--- a/lib/index.d.ts
+++ b/lib/index.d.ts
@@ -3,10 +3,10 @@
  *
  * @param {Readonly<Options>} options
  *   Props.
- * @returns {JSX.Element}
+ * @returns {Promise<JSX.Element>}
  *   React element.
  */
-export function Markdown(options: Readonly<Options>): JSX.Element;
+export function Markdown(options: Readonly<Options>): Promise<JSX.Element>;
 /**
  * Make a URL safe.
  *
diff --git a/lib/index.js b/lib/index.js
index 414a534de551144be34dbb637b2586f56d2e7b96..9d7016d00f14710fa0862e599b99527d52bc819a 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -1,3 +1,5 @@
+'use client'
+
 // Register `Raw` in tree:
 /// <reference types="mdast-util-to-hast" />
 
@@ -142,10 +144,10 @@ const deprecations = [
  *
  * @param {Readonly<Options>} options
  *   Props.
- * @returns {JSX.Element}
+ * @returns {Promise<JSX.Element>}
  *   React element.
  */
-export function Markdown(options) {
+export async function Markdown(options) {
   const allowedElements = options.allowedElements
   const allowElement = options.allowElement
   const children = options.children || ''
@@ -205,7 +207,7 @@ export function Markdown(options) {
 
   const mdastTree = processor.parse(file)
   /** @type {Nodes} */
-  let hastTree = processor.runSync(mdastTree, file)
+  let hastTree = await processor.run(mdastTree, file)
 
   // Wrap in `div` if thereâ€™s a class name.
   if (className) {
